import java.util.regex.Pattern
buildscript {
    repositories {
        maven {
            name 'Shadow'
            url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
        }
        mavenCentral()
        mavenLocal()
    }

    /*dependencies {
        classpath 'org.ajoberstar:gradle-git:0.8.0'
    }*/
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
}

apply plugin: 'idea'

ext {
    MY_VERSION = pullVersion()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


group 'nukeologist'
version "${MY_VERSION}"

sourceCompatibility = targetCompatibility = 1.11

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    compile("net.dv8tion:JDA:4.1.1_101") {
        exclude module: 'opus-java'
    }
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.github.classgraph:classgraph:4.8.41'
    implementation 'com.google.code.gson:gson:2.8.5'
    // This doesn't work with JDA 4 at the time of writing
//    compile ('com.sedmelluq:jda-nas:1.0.6') {
//        exclude group: 'net.dv8tion'
//    }
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes([
                'Main-Class': 'nukeologist.kregbot.Main',
                "Specification-Title": "KregBot",
                "Specification-Vendor": "Nukeologist",
                "Specification-Version": MY_VERSION, // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": version,
                "Implementation-Vendor" :"Nukeologist",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def pullVersion() {
    def file = file("src/main/java/nukeologist/kregbot/KregBot.java")
    def version = ""
    def pattern = Pattern.compile("^\tprivate static final String VERSION = \"([\\d\\.]*)\";\$")
    file.eachLine { String s ->
        def matcher = pattern.matcher(s)
        if (matcher.matches()) {
            version = matcher.group(1)
            return version
        }
    }
    return version
}
